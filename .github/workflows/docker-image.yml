name: Build and push docker images

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      # Prevent a failure in one image from stopping the other builds
      fail-fast: false
      matrix:
        include:
          - context: "server"
            image: "matrix-notifier-server"
            platforms: "linux/arm/v7,linux/arm64,linux/amd64"
          - context: "bot"
            image: "matrix-notifier-bot"
            platforms: "linux/arm/v7,linux/arm64,linux/amd64"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.1
        # Fixes ghcr showing unknown architecture
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=false
          images: |
            name=ghcr.io/${{ github.repository_owner }}/${{matrix.image}}
            name=nlion/${{matrix.image}}
          tags: |
            # Tag with latest
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # Tag with git tag on release
            type=ref,event=tag,enable=${{ github.event_name == 'release' }}

      # First only pushing amd64 architecture for faster deployment
      - name: First Push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ${{ matrix.context }}
          platforms: "linux/amd64"
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true

      # Secondly deploying the rest of the architectures
      - name: Second Push
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          context: ${{ matrix.context }}
          platforms: ${{ matrix.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}