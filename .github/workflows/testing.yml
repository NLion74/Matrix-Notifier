name: Test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Run_and_Test:
    name: Run and Test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup env-file
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_bot_user: ${{ secrets.MATRIX_USERNAME }}
          envkey_bot_pass: ${{ secrets.MATRIX_PASSWORD }}
          envkey_home_server: ${{ secrets.MATRIX_HOMESERVER }}
          envkey_authorization: true
          envkey_auth_secret: ${{ secrets.SERVER_SECRET }}
          directory: ./docker
          file_name: .test-env
          fail_on_empty: false

      - name: Run Server
        working-directory: ./docker
        run: docker-compose -f ./test-docker-compose.yml --env-file ./.test-env up --abort-on-container-exit

  code_quality_test:
    name: code quality test ${{ matrix.python-version }}

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - name: Check out code from Github
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with pylint
        run: |
          # stop the build if pylint gives a score under 9
          export PWD=$(pwd)
          python3 -m pylint plex_auto_languages --fail-under=9 --max-line-length=127 --disable=C0114,C0115,C0116,W1203,R0903,W0238 --init-hook='import sys; sys.path.append("${PWD}")'

  coverage:
    name: upload coverage to codecov
    runs-on: ubuntu-20.04
    steps:
    - name: Check out code from GitHub
      uses: actions/checkout@v3
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
